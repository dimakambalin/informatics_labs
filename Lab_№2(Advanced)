*1. С помощью команд which и whereis выясните, в какой директории находятся программы cat, less, grep и find

which выводит путь к команде
whereis выводит путь к команде и её документации

which cat
whereis cat
which less
whereis less
which find 
whereis find

*2. Выведите на экран значение переменной окружения $PATH (echo $PATH) и убедитесь, что директория, найденная в п.1 входит в $PATH

echo $PATH

*убедитесь, что директория, найденная в п.1 входит в $PATH echo $PATH

which cat
cd /bin 
ls 
* и там будут наши команды
переменная $PATH хранит все пути до всех возможных команд

*3. Скомпилируйте какую-нибудь программу на C и попробуйте запустить её, находясь в той же директории. Перейдите в другую директорию и запустите ту же программу.


mkdir new_dir
cd new_dir
touch main.c *создаём программу на С

mcedit main.c *в текстовом редакторе пишем программу на С
#include <stdio.h>
int main(){
printf("Hello world\n");
return 0;
}
Компилятор gcc по умолчанию присваивает всем созданным исполняемым файлам имя a.out. Если хотите назвать его по-другому,
нужно к команде на компиляцию добавить флаг -o и имя, которым вы хотите его назвать. Давайте наберём такую команду:

gcc main.c -o main1       *компилируем нашу программу, main1 это исполняемый двоичный файл
ls
./main1                   *запускаем программу

cd *перейдём в корневую директорию и запустим оттуда нашу программу, которая будет лежать в new_dir
./new_dir/main1

*а теперь из подкаталога запустим нашу программу, которая будет лежать в надкаталоге
cd new_dir

mv main1 ../
mv main.c ../

../main1 *точка это текущая директория

*4. Добавьте директорию, в которой лежит программа из п.3 в $PATH (export PATH=$PATH:<новая директория>). 
*мы запишем путь до команды, в которой будет храниться наша программа main1,
и тогда мы сможем запустить программу main1 из любой директории, так же как мы запускали остальные команды например как cat, ls и т.д.
export PATH = $PATH:/home/students/17200/kambalin
echo $PATH 
cd new_dir 
main1
